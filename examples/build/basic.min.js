(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _app = _interopRequireDefault(require("../source/js/app"));

var _append = _interopRequireDefault(require("dom-helpers/src/append"));

var _toggleClass = _interopRequireDefault(require("dom-helpers/src/toggleClass"));

var _clickp = _interopRequireDefault(require("dom-helpers/src/event/clickp"));

var _getWindowDimensions2 = _interopRequireDefault(require("dom-helpers/src/getWindowDimensions"));

var _setWindowScrollTop = _interopRequireDefault(require("dom-helpers/src/setWindowScrollTop"));

var _q = _interopRequireDefault(require("dom-helpers/src/q"));

var _jsx = _interopRequireDefault(require("dom-helpers/src/jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

//Panels.init();
function createRow(count) {
  var r = [];

  for (var i = 1; i <= count; i++) {
    r.push(_jsx["default"].h("div", {
      "class": "r"
    }, i));
  }

  return r;
}

function createPanel(name, size, isScroll, rowsCount) {
  var el = _jsx["default"].h("div", {
    "class": "modal-panel"
  }, _jsx["default"].h("header", {
    "class": "modal-panel__header"
  }, name), _jsx["default"].h("section", {
    "class": "modal-panel__content"
  }, createRow(rowsCount)), _jsx["default"].h("footer", {
    "class": "modal-panel__footer"
  }, "footer"));

  (0, _append["default"])('body', el);

  _app["default"].register(name, el, {
    revealType: 'slide',
    revealFrom: 'left',
    animDurations: {
      overlay: 200,
      panel: 400
    },
    addScrollHelper: true,
    width: function width(viewportDimensions) {
      switch (size) {
        case 'cover':
        case 'fw':
          return viewportDimensions.width;

        case 'small':
        case 'fh':
          return viewportDimensions.width * 0.7;
      }
    },
    height: function height(viewportDimensions) {
      switch (size) {
        case 'cover':
        case 'fh':
          return viewportDimensions.height;

        case 'small':
        case 'fw':
          return 200;
        //return viewportDimensions.height * 0.7;
      }
    },
    contentScrollable: function contentScrollable() {
      return isScroll;
    }
  });
}

var w = 1;
var logEl = (0, _q["default"])('.log');

function reportWindowSize() {
  if (logEl) {
    var _getWindowDimensions = (0, _getWindowDimensions2["default"])(),
        width = _getWindowDimensions.width,
        height = _getWindowDimensions.height;

    logEl.innerHTML = w++ + 'resize: ' + width + ' x ' + height;
  }
}

var st = 0;
window.addEventListener('resize', reportWindowSize);
(0, _clickp["default"])('.controls button', function (ev, el) {
  if (el.name == 'resize') {
    _app["default"].resize();

    return;
  } else if (el.name == 'window') {
    reportWindowSize();
    return;
  } else if (el.name == 'scroll') {
    (0, _setWindowScrollTop["default"])(1);
    return;
  }

  var scroll = parseInt(el.dataset.scroll, 10) ? true : false;
  var rowsCount = parseInt(el.dataset.rows, 10);
  var name = el.dataset.size + '_' + (scroll ? 'scroll' : 'notscroll') + '_' + rowsCount;

  var panel = _app["default"].get(name);

  if (!panel) {
    createPanel(name, el.dataset.size, scroll, rowsCount);
  }

  _app["default"].toggle(name);

  (0, _toggleClass["default"])(el, 'open', _app["default"].isOpen(name));
});
(0, _clickp["default"])('[name=openminimal]', function () {
  var el = _jsx["default"].h("div", {
    "class": "modal-panel"
  }, _jsx["default"].h("section", {
    "class": "modal-panel__content"
  }, "Minimal, Sint veniam commodo magna in proident eu in consequat."));

  (0, _append["default"])('body', el);

  _app["default"].register('minimal', el, {
    align: function align(viewportDimensions) {
      if (viewportDimensions.width > 600) {
        return 'right:20 top:20';
      } else {
        return 'left:0 top:0';
      }
    },
    //align: 'center center',
    width: function width(viewportDimensions) {
      return viewportDimensions.width * 0.7;
    },
    height: function height(viewportDimensions) {
      return viewportDimensions.height * 0.7;
    }
  });

  _app["default"].show('minimal');
});

},{"../source/js/app":49,"dom-helpers/src/append":3,"dom-helpers/src/event/clickp":5,"dom-helpers/src/getWindowDimensions":7,"dom-helpers/src/jsx":11,"dom-helpers/src/q":13,"dom-helpers/src/setWindowScrollTop":19,"dom-helpers/src/toggleClass":20}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _hasClass = _interopRequireDefault(require("./hasClass"));

var _rea = _interopRequireDefault(require("./rea"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(els, className) {
  (0, _rea["default"])(els).forEach(function (el) {
    if (!(0, _hasClass["default"])(el, className)) {
      if (typeof el.classList != 'undefined') {
        el.classList.add(className);
      } else {
        el.className += ' ' + className;
      }
    }
  });
}

},{"./hasClass":8,"./rea":16}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _isArray = _interopRequireDefault(require("./isArray"));

var _re = _interopRequireDefault(require("./re"));

var _isEmpty = _interopRequireDefault(require("./isEmpty"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * @param string|DOM node Selector or DOM node
 */
function append(el, childs) {
  // Resolve element
  el = (0, _re["default"])(el);

  if (!(0, _isArray["default"])(childs)) {
    childs = [childs];
  }

  var _iterator = _createForOfIteratorHelper(childs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var child = _step.value;

      if ((0, _isArray["default"])(child)) {
        append(el, child);
      } else if (typeof child === 'string' || typeof child === 'number' || typeof child === 'undefined' || child === null) {
        el.appendChild(document.createTextNode((0, _isEmpty["default"])(child) ? '' : child));
      } else {
        el.appendChild(child);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return el;
}

var _default = append;
exports["default"] = _default;

},{"./isArray":9,"./isEmpty":10,"./re":15}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _matchesMethodName = _interopRequireDefault(require("../other/matchesMethodName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Pievieno event listener.
 * Iekšējai izmantošanai
 * @param args event funkcijas argument (el, eventName, querySelector, cb)
 */
function _default(args, preventDefault) {
  var el = args.el,
      eventName = args.eventName,
      querySelector = args.querySelector,
      cb = args.cb; // Atgriežam event handler, lai to var remove

  var eventHandler = function eventHandler(ev) {
    var matchedEl = ev.target;

    if (querySelector) {
      while (matchedEl && matchedEl !== el) {
        if (matchedEl[_matchesMethodName["default"]](querySelector)) {
          // Auto Prevent event
          if (preventDefault) {
            ev.preventDefault();
          }

          if (cb) {
            cb(ev, matchedEl);
          }

          return;
        }

        matchedEl = matchedEl.parentNode;
      }
    } else {
      // Auto Prevent event
      if (preventDefault) {
        ev.preventDefault();
      }

      if (cb) {
        cb(ev, matchedEl);
      }
    }
  };

  el.addEventListener(eventName, eventHandler);
  return eventHandler;
}

},{"../other/matchesMethodName":12}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _parseArguments = _interopRequireDefault(require("./parseArguments"));

var _addListener = _interopRequireDefault(require("./addListener"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default() {
  return (0, _addListener["default"])((0, _parseArguments["default"])(arguments, 'click'), true);
}

},{"./addListener":4,"./parseArguments":6}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function a(args, index) {
  return index < args.length ? args[index] : undefined;
}

function astring(args, index) {
  return typeof a(args, index) === 'string';
}

function afunction(args, index) {
  return typeof a(args, index) === 'function';
}
/**
 * Parse arguments
 *
 * These are possible signatures
 *
 * First case is when argument definedEventName is undefined
 *
 * 1.1 on(domNode, 'click', '.selector', function(){})
 * 1.2 on(domNode, 'click', function(){})
 * 1.3 on('click', '.selectr', function(){})
 * 1.4 on('click', function(){})
 *
 * Signatures when argument definedEventName is defined
 * In this case asume, that there is no eventName in arguments signature
 *
 * 2.1 click(domNode, '.selector', function(){})
 * 2.2 click(domNode, function(){})
 * 2.3 click('.selector', function(){})
 * 2.4 click(function(){})
 */


function _default(args, definedEventName) {
  var r = {
    el: undefined,
    eventName: undefined,
    querySelector: undefined,
    cb: undefined
  }; // 2.4
  // Ir padots definedEventName un args ir tikai callback

  if (afunction(args, 0) && definedEventName) {
    r.el = document;
    r.cb = a(args, 0);
    r.eventName = definedEventName;
    return r;
  }

  var i = 0; // DOM elements
  // 1.3, 1.4, 2.3

  if (astring(args, i)) {
    r.el = document;
  } // 1.1, 1.2, 2.1, 2.2
  else {
      r.el = a(args, i);
      i = i + 1;
    } // Event


  if (definedEventName) {
    r.eventName = definedEventName;
  } else {
    r.eventName = a(args, i);
    i = i + 1;
  } // Selector un Callback ir pēdējie 1 vai 2 argumenti


  if (astring(args, i)) {
    r.querySelector = a(args, i);
    r.cb = a(args, i + 1);
  } else {
    r.cb = a(args, i);
  }

  return r;
}

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default() {
  var w = window,
      d = document,
      e = d.documentElement,
      g = d.getElementsByTagName('body')[0];
  return {
    width: w.innerWidth || e.clientWidth || g.clientWidth,
    height: w.innerHeight || e.clientHeight || g.clientHeight
  };
}

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _re = _interopRequireDefault(require("./re"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(el, className) {
  el = (0, _re["default"])(el);

  if (typeof el.classList != 'undefined') {
    return el.classList.contains(className);
  } else {
    return el.className.match(new RegExp('(?:^|\\s)' + className + '(?!\\S)', 'ig')) ? true : false;
  }
}

},{"./re":15}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(value) {
  if (typeof Array.isArray != 'undefined') {
    return Array.isArray(value);
  }

  return Object.prototype.toString.call(value) === '[object Array]';
}

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(v) {
  return typeof v === 'undefined' || v === null;
}

},{}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _setAttributes = _interopRequireDefault(require("./setAttributes"));

var _append = _interopRequireDefault(require("./append"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Helpers for using jsx syntax to create dom elements
 * use babel pragma to set custom handler for creating dom elements
 */
var _default = {
  Fragment: 'fragment',
  h: function h(elementName, attributes) {
    var el;

    if (elementName === this.Fragment) {
      el = new DocumentFragment();
    } else if (typeof elementName == 'function') {
      el = elementName(attributes);
    } else {
      el = document.createElement(elementName);

      if (attributes) {
        (0, _setAttributes["default"])(el, attributes);
      }
    }

    if (el) {
      for (var _len = arguments.length, childs = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        childs[_key - 2] = arguments[_key];
      }

      (0, _append["default"])(el, childs);
    }

    return el;
  }
};
exports["default"] = _default;

},{"./append":3,"./setAttributes":18}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

/**
 * Store matches method name
 * Internet explorer 11 uses msMatchesSelector
 * Modern browsers - matches
 *
 * Element.prototype.matches = Element.prototype.msMatchesSelector;
 */
var n = 'matches';

if (typeof Element.prototype.msMatchesSelector != 'undefined') {
  n = 'msMatchesSelector';
}

var _default = n;
exports["default"] = _default;

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

/**
 * querySelector
 */
function _default(p1, p2) {
  var parentNode, querySelector;

  if (typeof p1 === 'string') {
    parentNode = document;
    querySelector = p1;
  } else {
    parentNode = p1;
    querySelector = p2;
  }

  return parentNode.querySelector(querySelector);
}

},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

/**
 * querySelectorAll
 */
function _default(p1, p2) {
  var parentNode, querySelector;

  if (typeof p1 === 'string') {
    parentNode = document;
    querySelector = p1;
  } else {
    parentNode = p1;
    querySelector = p2;
  }

  return parentNode.querySelectorAll(querySelector);
}

},{}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _q = _interopRequireDefault(require("./q"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Resolve dom element.
 * First check if el is string representing selector, then
 * find element matching selector using document.querySelector function
 * Otherwise return el
 */
function _default(el) {
  if (typeof el === 'string') {
    return (0, _q["default"])(el);
  }

  return el;
}

},{"./q":13}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _qa = _interopRequireDefault(require("./qa"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Resolve dom element.
 * First check if el is string representing selector, then
 * find element matching selector using document.querySelectorAll function
 * Always return NodeList or array, even if els is single Dom Node
 */
function _default(els) {
  if (typeof els === 'string') {
    return (0, _qa["default"])(els);
  } // Make sure els is array. Idealy NodeList


  if (!(_typeof(els) == 'object' && typeof els.length != 'undefined')) {
    els = [els];
  }

  return els;
}

},{"./qa":14}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _rea = _interopRequireDefault(require("./rea"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(els, className) {
  (0, _rea["default"])(els).forEach(function (el) {
    if (typeof el.classList != 'undefined') {
      el.classList.remove(className);
    } else {
      el.className = el.className.replace(new RegExp('(?:^|\\s)' + className + '(?!\\S)', 'ig'), '');
    }
  });
}

},{"./rea":16}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _re = _interopRequireDefault(require("./re"));

var _isEmpty = _interopRequireDefault(require("./isEmpty"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(el, attributes) {
  el = (0, _re["default"])(el);
  var tagName = el.tagName.toUpperCase();
  var value;

  for (var key in attributes) {
    if (!attributes.hasOwnProperty(key)) {
      continue;
    }

    value = attributes[key];

    if (key == 'className') {
      key = 'class';
    }

    if (key.substr(0, 5) == 'data-') {
      el.dataset[key.substr(5)] = value;
    } else if (key == 'style') {
      for (var k in value) {
        el.style[k] = value[k];
      }
    } else if (key == 'checked' && tagName == 'INPUT') {
      el.checked = value ? true : false;
    } else {
      el.setAttribute(key, (0, _isEmpty["default"])(value) ? '' : value);
    }
  }
}

},{"./isEmpty":10,"./re":15}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(top) {
  window.scrollTo(0, top);
}

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _rea = _interopRequireDefault(require("./rea"));

var _hasClass = _interopRequireDefault(require("./hasClass"));

var _addClass = _interopRequireDefault(require("./addClass"));

var _removeClass = _interopRequireDefault(require("./removeClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * @param addOrRemove boolean|undefined. If true, than addClass. If false - removeClass
 */
function _default(els, className, addOrRemove) {
  (0, _rea["default"])(els).forEach(function (el) {
    if (typeof addOrRemove != 'undefined') {
      if (addOrRemove) {
        (0, _addClass["default"])(el, className);
      } else {
        (0, _removeClass["default"])(el, className);
      }
    } else {
      // Toggle
      if ((0, _hasClass["default"])(el, className)) {
        (0, _removeClass["default"])(el, className);
      } else {
        (0, _addClass["default"])(el, className);
      }
    }
  });
}

},{"./addClass":2,"./hasClass":8,"./rea":16,"./removeClass":17}],21:[function(require,module,exports){
arguments[4][2][0].apply(exports,arguments)
},{"./hasClass":34,"./rea":43,"dup":2}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _rea = _interopRequireDefault(require("./rea"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(els, props) {
  (0, _rea["default"])(els).forEach(function (el) {
    for (var name in props) {
      if (!props.hasOwnProperty(name)) {
        continue;
      }

      el.style[name] = props[name];
    }
  });
}

},{"./rea":43}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _re = _interopRequireDefault(require("./re"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike"));

var _isEmpty = _interopRequireDefault(require("./isEmpty"));

var _isTextContent = _interopRequireDefault(require("./isTextContent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * @param string|DOM node Selector or DOM node
 */
function append(el, childs) {
  // Resolve element
  el = (0, _re["default"])(el);
  /**
   * Array vai NodeList
   *
   * form elementam ir .length
   * Tāpēc, ja skatās pēc iterator, tad form būs kā array
   */

  var items = (0, _isArrayLike["default"])(childs) ? childs : [childs];

  for (var i = 0; i < items.length; i++) {
    var item = items[i];

    if ((0, _isArrayLike["default"])(item)) {
      append(el, item);
    } else {
      if ((0, _isTextContent["default"])(item)) {
        item = document.createTextNode((0, _isEmpty["default"])(item) ? '' : item);
      }

      el.appendChild(item);
    }
  }

  return childs;
}

var _default = append;
exports["default"] = _default;

},{"./isArrayLike":35,"./isEmpty":36,"./isTextContent":37,"./re":42}],24:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"../other/matchesMethodName":38,"dup":4}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _parseArguments = _interopRequireDefault(require("./parseArguments"));

var _addListener = _interopRequireDefault(require("./addListener"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default() {
  return (0, _addListener["default"])((0, _parseArguments["default"])(arguments, 'click'), false);
}

},{"./addListener":24,"./parseArguments":27}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _parseArguments = _interopRequireDefault(require("./parseArguments"));

var _addListener = _interopRequireDefault(require("./addListener"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default() {
  return (0, _addListener["default"])((0, _parseArguments["default"])(arguments), false);
}

},{"./addListener":24,"./parseArguments":27}],27:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(ev) {
  var el;

  if (ev.target) {
    el = ev.target;
  } else if (ev.srcElement) {
    el = ev.srcElement;
  } // Safari bug. Selected text returns text


  if (el.nodeType == 3) {
    el = el.parentNode;
  }

  return el;
}

},{}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _getStyleValueAsInt = _interopRequireDefault(require("./getStyleValueAsInt"));

var _re = _interopRequireDefault(require("./re"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(el, includeMargin) {
  el = (0, _re["default"])(el);
  includeMargin = typeof includeMargin == 'undefined' ? false : includeMargin;
  var s = getComputedStyle(el);
  var marginHorizontal = 0;
  var marginVertical = 0;

  if (includeMargin) {
    marginHorizontal = (0, _getStyleValueAsInt["default"])(s, 'margin-left') + (0, _getStyleValueAsInt["default"])(s, 'margin-right');
    marginVertical = (0, _getStyleValueAsInt["default"])(s, 'margin-top') + (0, _getStyleValueAsInt["default"])(s, 'margin-bottom');
  }

  if (typeof el.getBoundingClientRect != 'undefined') {
    if (typeof el.getBoundingClientRect().width != 'undefined' && typeof el.getBoundingClientRect().height != 'undefined') {
      return {
        width: el.getBoundingClientRect().width + marginHorizontal,
        height: el.getBoundingClientRect().height + marginVertical,
        marginH: marginHorizontal,
        marginV: marginVertical
      };
    }
  }

  return {
    width: el.offsetWidth + marginHorizontal,
    height: el.offsetHeight + marginVertical,
    marginH: marginHorizontal,
    marginV: marginVertical
  };
}

},{"./getStyleValueAsInt":31,"./re":42}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _re = _interopRequireDefault(require("./re"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(el, name) {
  el = (0, _re["default"])(el);
  var s = getComputedStyle(el);

  if (!s) {
    return undefined;
  }

  return s.getPropertyValue(name);
}

},{"./re":42}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(style, name) {
  return parseInt(style.getPropertyValue(name), 10);
}

},{}],32:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default() {
  return window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop;
}

},{}],34:[function(require,module,exports){
arguments[4][8][0].apply(exports,arguments)
},{"./re":42,"dup":8}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

/**
 * Array un NodeList būs kā array
 *
 * Nevar skatīties pēs .length un iterator, jo .length ir arī form elementam
 */
function _default(value) {
  return Object.prototype.toString.call(value) === '[object Array]' || Object.prototype.toString.call(value) === '[object NodeList]';
}

},{}],36:[function(require,module,exports){
arguments[4][10][0].apply(exports,arguments)
},{"dup":10}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(c) {
  return typeof c === 'string' || typeof c === 'number' || typeof c === 'undefined' || c === null;
}

},{}],38:[function(require,module,exports){
arguments[4][12][0].apply(exports,arguments)
},{"dup":12}],39:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _matchesMethodName = _interopRequireDefault(require("./other/matchesMethodName"));

var _re = _interopRequireDefault(require("./re"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Find elements parent node matching querySelector
 * or return el if it matches querySelector
 *
 * @param stopQuerySelecot querySelector at which to stop looking for parent. Use full
 * whene you know your most parent
 */
function _default(el, querySelector, stopQuerySelecot) {
  el = (0, _re["default"])(el); // If no query selector, than return direct parent

  if (!querySelector) {
    return el.parentNode;
  } // Also check if elements has "method" matches. nodeType=9 (Node.DOCUMENT_NODE) does not have matches method


  while (el && el[_matchesMethodName["default"]]) {
    if (el[_matchesMethodName["default"]](querySelector)) {
      return el;
    } // Check for stop query selector


    if (stopQuerySelecot && el[_matchesMethodName["default"]](stopQuerySelecot)) {
      return null;
    }

    el = el.parentNode;
  }

  return null;
}

},{"./other/matchesMethodName":38,"./re":42}],40:[function(require,module,exports){
arguments[4][13][0].apply(exports,arguments)
},{"dup":13}],41:[function(require,module,exports){
arguments[4][14][0].apply(exports,arguments)
},{"dup":14}],42:[function(require,module,exports){
arguments[4][15][0].apply(exports,arguments)
},{"./q":40,"dup":15}],43:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _qa = _interopRequireDefault(require("./qa"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Resolve dom element.
 * First check if el is string representing selector, then
 * find element matching selector using document.querySelectorAll function
 * Always return NodeList or array, even if els is single Dom Node
 */
function _default(els) {
  if (typeof els === 'string') {
    return (0, _qa["default"])(els);
  } // If single dom node


  if (_typeof(els) == 'object' && typeof els.tagName != 'undefined') {
    return [els];
  }

  return els;
}

},{"./qa":41}],44:[function(require,module,exports){
arguments[4][17][0].apply(exports,arguments)
},{"./rea":43,"dup":17}],45:[function(require,module,exports){
arguments[4][19][0].apply(exports,arguments)
},{"dup":19}],46:[function(require,module,exports){
arguments[4][20][0].apply(exports,arguments)
},{"./addClass":21,"./hasClass":34,"./rea":43,"./removeClass":44,"dup":20}],47:[function(require,module,exports){
var b = function(p1x, p1y, p2x, p2y) {
    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).
    var cx = 3.0 * p1x;
    var bx = 3.0 * (p2x - p1x) - cx;
    var ax = 1.0 - cx -bx;
         
    var cy = 3.0 * p1y;
    var by = 3.0 * (p2y - p1y) - cy;
    var ay = 1.0 - cy - by;

    var epsilon = 0.00001;

    function sampleCurveDerivativeX(t) {
        return (3.0 * ax * t + 2.0 * bx) * t + cx;
    }

    function sampleCurveX(t) {
        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.
        return ((ax * t + bx) * t + cx) * t;
    }

    function sampleCurveY(t) {
        return ((ay * t + by) * t + cy) * t;
    }

    // Given an x value, find a parametric value it came from.
    function solveCurveX(x)
    {
        var t0, t1, t2, x2, d2, i;

        // First try a few iterations of Newton's method -- normally very fast.
        for (t2 = x, i = 0; i < 8; i++) {
            x2 = sampleCurveX(t2) - x;
            if (Math.abs(x2) < epsilon) {
                return t2;
            }
            d2 = sampleCurveDerivativeX(t2);
            if (Math.abs(d2) < 1e-6) {
                break;
            }
            t2 = t2 - x2 / d2;
        }

        // Fall back to the bisection method for reliability.
        t0 = 0.0;
        t1 = 1.0;
        t2 = x;

        if (t2 < t0) {
            return t0;
        }
        if (t2 > t1) {
            return t1;
        }

        while (t0 < t1) {
            x2 = sampleCurveX(t2);
            if (Math.abs(x2 - x) < epsilon) {
                return t2;
            }
            if (x > x2) {
                t0 = t2;
            }
            else {
                t1 = t2;
            }
            t2 = (t1 - t0) * .5 + t0;
        }

        // Failure.
        return t2;
    }

    this.get = function(x) {
        return sampleCurveY(solveCurveX(x));
    }
}

module.exports = b;
},{}],48:[function(require,module,exports){
//var Bezier = require('./bezier1.js');
/**
 * See https://easings.net
 */
var Bezier = require('./bezier2.js');

var Stepper = function(config) {
    this.defaultBezierCurve = [0,0,1,1];
    this.precision = 10000000;
    this.progress = 0;
    this.current = 0;
    this.requestId = 0;
    this.inProgress = false;
    /**
     * Vērtība, kuru transformēt atbilstoši progress vērtībai
     * @param object object with props: from, to
     */
    this.value = undefined;

    this.config = config;

    this.setConfig();
}

Stepper.prototype = {
    setConfig: function(overrideConfig) {
        this.duration = this.getConfig('duration', overrideConfig);
        this.easing = this.getConfig('bezierCurve', overrideConfig);
        this.value = this.getConfig('value', overrideConfig);
        

        this.stepCallback = this.getConfig('onStep', overrideConfig);
        this.doneCallback = this.getConfig('onDone', overrideConfig);
        this.forceStopCallback = this.getConfig('onForceStop', overrideConfig);
    },

    run: function(overrideConfig) {
        this.setConfig(overrideConfig);

        this.current = 0;

        this.start();
        this.step();
    },

    /**
     * Run from given progress
     */
    runFrom: function(progress, overrideConfig) {
        this.setConfig(overrideConfig);

        /**
         * Šeit ir svarīgs moments
         * Padotais progress ir tāds, kādu gribam
         * bet easing aprēķinātais progress esošajā progress ir savādāk, jo 
         * tas ir curve un tas nav lineārs
         * Tāpēc šeit atrodam kādam ir jābūt progresam pēc easing
         *
         * Update pēc kāda laika lietošanas
         * Tomēr škiet, ka to nemaz nevajag darīt, jo ja es gribu sākt no
         * 0.9 progresa un duration ir 1000ms, tad es gribu, lai animācija
         * ir 100ms gara. Ja pārrēķina progresu, tad animācijas garums ir 
         * garāks vai īsāks
         */
        //progress = this.findStartProgress(progress, 0.1, 0, 1);
        
        this.startTime = +new Date();
        // Simulējam startTime, tā lai tas būtu sācies pirms norādītā progress
        this.startTime -= (this.duration * progress);
        // Turpinām no padotā progress
        this.progress = progress;

        this.inProgress = true;

        this.step();
    },

    /**
     * Meklējam kādam ir jābūt progress, lai pēc easing.get tas būt tāds pats kā progress
     */
    // findStartProgress: function(progress, step, from, to, inceptionLevel) {

    //     if (typeof inceptionLevel == 'undefined') {
    //         inceptionLevel = 0;
    //     }
        
    //     var d = from, prevR = 0, prevD;

    //     while (d < to) {
    //         // Lai ir lielāka precizitāte
    //         if (inceptionLevel++ > 100) {
    //             return d;
    //         }

    //         r = this.easing.get(d);

    //         if (Math.round(progress*this.precision) == Math.round(r*this.precision)) {
    //             return d;
    //         }

    //         if (this.isBetween(progress, prevR, r)) {
    //             return this.findStartProgress(progress, step/10, prevD, d, inceptionLevel);
    //         }

    //         prevD = d;
    //         prevR = r;
    //         d += step;
    //     }

    //     return d;
    // },

    /**
     * Is a between x1 and x2
     */
    // isBetween: function(a, x1, x2) {
    //     if (x2 > x1) {
    //         return a > x1 && a < x2;
    //     }
    //     return a > x2 && a < x1;
    // },

    isRunning: function() {
        return this.inProgress;
    },

    /**
     * Piefiksējam sākuma laiku
     */
    start: function() {
        this.inProgress = true;
        this.startTime = +new Date();
        this.progress = 0;
    },

    /**
     * Pārtraucam stepping
     */
    stop: function() {
        cancelAnimationFrame(this.requestId);
        this.done();
    },

    /**
     * Pārtraucam animāciju un neizpildām done callback
     */
    forceStop: function() {
        cancelAnimationFrame(this.requestId);
        this.inProgress = false;
        if (this.forceStopCallback) {
            this.forceStopCallback();
        }
    },

    done: function() {
        this.inProgress = false;
        if (this.doneCallback) {
            this.doneCallback();
        }
    },

    step: function() {
        var mthis = this;

        mthis.trackProgress();

        if (this.current < this.startTime + this.duration) {

            this.runStepCallback(this.progress);

            this.requestId = requestAnimationFrame(function(){
                mthis.step()
            });
        }
        else {
            this.runStepCallback(1);

            this.done();
        }
    },

    trackProgress: function() {
        // Current time
        this.current = +new Date();

        var delta = this.current - this.startTime;

        // Animation progress in precents
        this.progress = this.easing.get(delta / this.duration);

        //this.progress = Math.round(this.progress*this.precision)/this.precision;
    },

    runStepCallback: function(progress) {
        // Ja ir jāaprēķina vērtība atkarībā no progress
        if (this.value) {
            this.stepCallback(progress, this.calcValueFromProgress(progress, this.value.from, this.value.to))
        }
        else {
            this.stepCallback(progress)
        }
    },

    calcValueFromProgress: function(progress, from, to) {
        return from + ((to - from) * progress);
    },

    getEasing: function(bezierCurve) {
        if (!(bezierCurve && bezierCurve.length && bezierCurve.length == 4)) {
            bezierCurve = this.defaultBezierCurve;
        }
        return new Bezier(bezierCurve[0], bezierCurve[1], bezierCurve[2], bezierCurve[3]);
    },

    /**
     * Atgriežam config vērtību.
     * Katrai vērtībai pēc tās name tiek veiktas pārbaudes vai papildus apstrāde
     * @param secondaryConfig object Alternate override config vērtības
     */
    getConfig: function(name, secondaryConfig) {
        var r = this.getConfigValue(name, secondaryConfig);
        switch (name) {
            case 'bezierCurve':
                r = this.getEasing(r);
                break;
            case 'duration':
                r = parseInt(r, 10);
                r = isNaN(r) ? 200 : r;
                break;
            case 'onStep':
            case 'onDone':
            case 'onForceStop':
                r = typeof r == 'function' ? r : function(){}
                break;
            case 'value':
                if (!(r && typeof r == 'object' && typeof r['from'] != 'unefined' && r['to'] != 'undefined')) {
                    r = undefined;
                }
                break;
        }
        
        return r;
    },

    getConfigValue: function(name, secondaryConfig) {
        // Pirmo meklējam sekundārajā konfigā
        if (secondaryConfig && typeof secondaryConfig[name] != 'undefined') {
            return secondaryConfig[name];
        }

        // Meklējam bāzes konfigā
        if (this.config && typeof this.config[name] != 'undefined') {
            return this.config[name];
        }

        return undefined;
    }
}

module.exports = Stepper;
},{"./bezier2.js":47}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _bodyScrollDisable = _interopRequireDefault(require("./bodyScrollDisable"));

var _overlay = _interopRequireDefault(require("./overlay"));

var _manager = _interopRequireDefault(require("./manager"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var isInit = false;

function checkInitBeforeCall(cb, args) {
  if (!isInit) {
    init();
    isInit = true;
  }

  return cb.apply(this, args);
}

function init() {
  _bodyScrollDisable["default"].init();

  _overlay["default"].init();

  _manager["default"].init();
}

var _default = {
  init: init,
  register: function register() {
    return checkInitBeforeCall(_manager["default"].registerPanel, Array.prototype.slice.call(arguments));
  },
  get: function get() {
    return checkInitBeforeCall(_manager["default"].getPanel, Array.prototype.slice.call(arguments));
  },
  show: function show() {
    return checkInitBeforeCall(_manager["default"].showPanel, Array.prototype.slice.call(arguments));
  },
  hide: function hide() {
    return checkInitBeforeCall(_manager["default"].hidePanel, Array.prototype.slice.call(arguments));
  },
  toggle: function toggle() {
    return checkInitBeforeCall(_manager["default"].togglePanel, Array.prototype.slice.call(arguments));
  },
  hideAll: function hideAll() {
    return checkInitBeforeCall(_manager["default"].hideAll, Array.prototype.slice.call(arguments));
  },
  resize: function resize() {
    return checkInitBeforeCall(_manager["default"].resizePanel, Array.prototype.slice.call(arguments));
  },
  isOpen: function isOpen() {
    return checkInitBeforeCall(_manager["default"].isOpen, Array.prototype.slice.call(arguments));
  },
  onHide: function onHide() {
    return checkInitBeforeCall(_manager["default"].onHide, Array.prototype.slice.call(arguments));
  }
};
exports["default"] = _default;

},{"./bodyScrollDisable":50,"./manager":56,"./overlay":57}],50:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _getWindowScrollTop = _interopRequireDefault(require("dom-helpers/src/getWindowScrollTop"));

var _setWindowScrollTop = _interopRequireDefault(require("dom-helpers/src/setWindowScrollTop"));

var _addClass = _interopRequireDefault(require("dom-helpers/src/addClass"));

var _removeClass = _interopRequireDefault(require("dom-helpers/src/removeClass"));

var _addStyle = _interopRequireDefault(require("dom-helpers/src/addStyle"));

var _getStyle = _interopRequireDefault(require("dom-helpers/src/getStyle"));

var _q = _interopRequireDefault(require("dom-helpers/src/q"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var app,
    appContainer,
    scrollTop,
    prevAppWPosition = '',
    isDefined = false;

function init() {
  /**
   * @todo Uztaisīt, lai app un app-w ir konfigurējami
   */
  app = (0, _q["default"])('.app');
  appContainer = (0, _q["default"])('.app-w'); // Ja ir abi app un appContainer, tad uzskatam, ka ir defined

  if (app && appContainer) {
    isDefined = true;
  }
}

function _disable() {
  // Piefiksējam scroll top
  scrollTop = (0, _getWindowScrollTop["default"])();
  /**
   * Šajā mirklī appContainer obligāti jābūit position fixed
   * Jānolasa kāda ir tekošā position un jāpieglabā
   * Iespējams, ka pašlaik tam ir inline uzlikts cits position
   * Kad būs enabled position jāuzliek tāds pats kā pirms disabled
   *
   * Nolasam tikai vērtību no elementam pa tiešo uz style uzlikto position
   * jo jaunais position tiks uzlikts uz elementu pa tiešo
   */
  // Read and store current positon

  prevAppWPosition = (0, _getStyle["default"])(appContainer, 'position'); // Add position fixed

  (0, _addStyle["default"])(appContainer, {
    position: 'fixed'
  });
  (0, _addClass["default"])(appContainer, 'app-w--disabled');
  (0, _addStyle["default"])(app, {
    transform: 'translate(0,-' + scrollTop + 'px)'
  });
}

function _enable() {
  (0, _addStyle["default"])(appContainer, {
    position: prevAppWPosition
  });
  (0, _removeClass["default"])(appContainer, 'app-w--disabled');
  (0, _addStyle["default"])(app, {
    transform: ''
  }); // Atjaunojam scroll top

  (0, _setWindowScrollTop["default"])(scrollTop);
}

var _default = {
  init: init,
  disable: function disable() {
    if (!isDefined) {
      return;
    }

    _disable();
  },
  enable: function enable() {
    if (!isDefined) {
      return;
    }

    _enable();
  },
  getEl: function getEl() {
    if (!isDefined) {
      return {
        setStyle: function setStyle() {},
        el: null
      };
    }

    return {
      setStyle: function setStyle(style) {
        (0, _addStyle["default"])(appContainer, style);
      },
      el: appContainer
    };
  },
  setZIndex: function setZIndex(i) {
    if (!isDefined) {
      return;
    }

    (0, _addStyle["default"])(appContainer, {
      zIndex: i
    });
  }
};
exports["default"] = _default;

},{"dom-helpers/src/addClass":21,"dom-helpers/src/addStyle":22,"dom-helpers/src/getStyle":30,"dom-helpers/src/getWindowScrollTop":33,"dom-helpers/src/q":40,"dom-helpers/src/removeClass":44,"dom-helpers/src/setWindowScrollTop":45}],51:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(align, panelDimensions, viewportDimensions) {
  var r = {
    x: {
      side: 'left',
      value: 0
    },
    y: {
      side: 'top',
      value: 0
    }
  };
  /**
   * vērtība varbūt vienkārši vārdiska pozīcija (left, right, top, bottom)
   * vai vērtība plus skaitliska nobīda (left:20)
   * tas nozīmē, ka jānovieto kreisajā pusē ar 20 pec nobīdi
   */

  var x = align.x.split(':');
  var xside = x[0];
  var xoffset = parseInt(x.length > 1 ? x[1] : 0, 10);

  if (isNaN(xoffset)) {
    xoffset = 0;
  }

  var y = align.y.split(':');
  var yside = y[0];
  var yoffset = parseInt(y.length > 1 ? y[1] : 0, 10);

  if (isNaN(yoffset)) {
    yoffset = 0;
  }

  r.x.side = xside;

  if (xside == 'left') {
    r.x.value = 0;
  } else if (xside == 'right') {
    r.x.value = viewportDimensions.width - panelDimensions.width;
    xoffset = xoffset * -1;
  } else if (xside == 'center') {
    r.x.value = (viewportDimensions.width - panelDimensions.width) / 2;
  } else {
    r.x.value = 0;
  }

  r.x.value = r.x.value + xoffset;
  r.y.side = yside;

  if (yside == 'top') {
    r.y.value = 0;
  } else if (yside == 'bottom') {
    r.y.value = viewportDimensions.height - panelDimensions.height;
    yoffset = yoffset * -1;
  } else if (yside == 'center') {
    r.y.value = (viewportDimensions.height - panelDimensions.height) / 2;
  } else {
    r.y.value = 0;
  }

  r.y.value = r.y.value + yoffset;
  return r;
}

},{}],52:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

/**
 * Te ir jārēķina offset no tekošās paneļa pozīcijas (align.x un align.y)
 * Progresa beigās panel ir jānostājas savā align vietā. Tātad x un y jābūt 0
 * Progresa sākumā jāaprēķina tas attālums, lai paneli novietotu vajadzīgajā starta vietā
 */
function _default(align, revealFrom, panelDimensions, viewportDimensions, progress) {
  if (revealFrom == 'right') {
    /**
     * start pozīcija: tā lai paneļa x ir aiz viewport labās puses
     * (viewportDimensions.width - align.x) - šis ir tas lielums, kādu jāpieliek esošajai
     * align.x pozīcjai, lai izbīdītu ārpus viewport
     * beigu pozīcijā šai vērtībai (viewportDimensions.width - align.x) jābūt 0
     */
    return {
      x: viewportDimensions.width - align.x.value - (viewportDimensions.width - align.x.value) * progress,
      y: 0
    };
  } else if (revealFrom == 'left') {
    return {
      x: -(align.x.value + panelDimensions.width - (align.x.value + panelDimensions.width) * progress),
      y: 0
    };
  } else if (revealFrom == 'top') {
    return {
      x: 0,
      y: -(align.y.value + panelDimensions.height - (align.y.value + panelDimensions.height) * progress)
    };
  } else if (revealFrom == 'bottom') {
    return {
      x: 0,
      y: viewportDimensions.height - align.y.value - (viewportDimensions.height - align.y.value) * progress
    };
  }
}

},{}],53:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(callbacksArray, args) {
  var _this = this;

  callbacksArray.forEach(function (cb) {
    return cb.apply(_this, args);
  });
}

},{}],54:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var r = /(android)/i.test(navigator.userAgent);
var _default = r;
exports["default"] = _default;

},{}],55:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var r = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);
var _default = r;
exports["default"] = _default;

},{}],56:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _re = _interopRequireDefault(require("dom-helpers/src/re"));

var _on = _interopRequireDefault(require("dom-helpers/src/event/on"));

var _getWindowDimensions = _interopRequireDefault(require("dom-helpers/src/getWindowDimensions"));

var _addStyle = _interopRequireDefault(require("dom-helpers/src/addStyle"));

var _append = _interopRequireDefault(require("dom-helpers/src/append"));

var _stepper = _interopRequireDefault(require("stepper"));

var _bodyScrollDisable = _interopRequireDefault(require("./bodyScrollDisable"));

var _overlay = _interopRequireDefault(require("./overlay"));

var _panel = _interopRequireDefault(require("./panel"));

var _fireCallbacks = _interopRequireDefault(require("./fireCallbacks"));

var _propPushToArray = _interopRequireDefault(require("./propPushToArray"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// function getScrollbarWidth() {
//   return window.innerWidth - document.documentElement.clientWidth;
// }
var Step,
    OverlayStep,
    panels = {},
    needToShowOverlay = true,
    needToHideOverlay = true,
    openPanelsCount = 0,
    openPanelsStack = [],
    windowDimensions = {},
    scrollHelper,
    callbacks = {
  hide: {},
  show: {}
};
/**
 * Bezier curve for sliding animations
 * Begging is fast, ending is slow
 */

var slidingAnimBezierCurve = {
  show: [0.075, 0.82, 0.165, 1],
  hide: [0.075, 0.82, 0.165, 1]
};
/**
 * Bezier curve for fading animations
 * Begging is fast, ending is slow
 */

var fadingAnimBezierCurve = {
  show: [0.55, 0.085, 0.68, 0.53],
  hide: [0.25, 0.46, 0.45, 0.94]
};

function init() {
  Step = new _stepper["default"]();
  OverlayStep = new _stepper["default"](); // Neskrolējama cover panēl skroll palīgs, lai varēt ieskrolēt adrese joslu

  scrollHelper = createScrollHelper();
  windowDimensions = (0, _getWindowDimensions["default"])(); // Set window resize handler

  var st = 0;
  (0, _on["default"])(window, 'resize', function () {
    clearTimeout(st);
    st = setTimeout(handleResizeAll, 5);
  });
}

function handleResizeAll() {
  windowDimensions = (0, _getWindowDimensions["default"])();
  forEachPanel(function (panel) {
    return panel.isOpen ? panel.resize() : '';
  });
}

function createScrollHelper() {
  var r = document.createElement('div');
  (0, _addStyle["default"])(r, {
    top: 0,
    left: 0,
    width: '1px',
    height: 0,
    position: 'absolute',
    zIndex: -1
  });
  (0, _append["default"])('body', r);
  return r;
}

function forEachPanel(cb) {
  for (var name in panels) {
    if (panels.hasOwnProperty(name)) {
      cb(panels[name], name);
    }
  }
}

function registerPanel(name, el, props) {
  el = (0, _re["default"])(el);

  if (typeof panels[name] != 'undefined') {
    return;
  }

  panels[name] = createPanel(name, el, props);
}

function createPanel(name, el, props) {
  var r = new _panel["default"](name, el, props);
  /**
   * Window dimensions nolasīs tika manager un vienu reizi pie window resize
   */

  r.getWindowDimensions = function () {
    return windowDimensions;
  };

  r.setScrollHelperHeight = function (height) {
    (0, _addStyle["default"])(scrollHelper, {
      height: height + 'px'
    });
  };

  setPanelEvents(r);
  return r;
}

function getPanel(name) {
  return panels[name];
}

function setPanelEvents(Panel) {
  Panel.onClose(function () {
    return handlePanelHide(Panel);
  });
}

function setZIndex(zIndex, panel) {
  _bodyScrollDisable["default"].setZIndex(zIndex.bodyFrame);

  _overlay["default"].setZIndex(zIndex.overlay);

  panel.setZIndex(zIndex.panel);
}

function handlePanelShow(Panel, config) {
  if (Panel.isOpen) {
    return;
  }

  showPanel(Panel, config);
}
/**
 * Panel hide event
 */


function handlePanelHide(Panel, config) {
  if (!Panel.isOpen) {
    return;
  }

  if (Panel.hideInProgress) {
    return;
  } // Ja panelim ir custom close callback, tad tam padodam iekšejo close metodi


  if (typeof callbacks.hide[Panel.name] != 'undefined') {
    (0, _fireCallbacks["default"])(callbacks.hide[Panel.name], [function () {
      return hidePanel(Panel, config);
    }]);
  } else {
    hidePanel(Panel, config);
  }
}

function handlePanelResize(Panel) {
  if (!Panel.isOpen) {
    return;
  }

  Panel.resize();
}

function panelBeforeShow(panel) {
  openPanelsCount++;
  openPanelsStack.push(panel); //if (openPanelsCount > 0)

  needToShowOverlay = !_overlay["default"].isVisible();

  if (needToShowOverlay) {
    _overlay["default"].beforeShow();

    _bodyScrollDisable["default"].disable();
  }

  panel.beforeShow();
}

function panelAfterShow(panel) {
  panel.afterShow(); // Panel show event

  panel.getProp('onShow', function () {})();
  panel.setOverrideProps(null);
}

function panelBeforeHide(panel) {
  panel.beforeHide();
  needToHideOverlay = _overlay["default"].isVisible();

  if (openPanelsCount > 1) {
    needToHideOverlay = false;
  }

  if (needToHideOverlay) {
    _overlay["default"].beforeHide();
  }
}

function panelAfterHide(panel) {
  openPanelsCount--;
  openPanelsStack.pop();

  if (openPanelsCount > 0) {
    openPanelsStack[openPanelsStack.length - 1].enable();
  } //if (openPanelsCount <= 0)


  if (needToHideOverlay) {
    _overlay["default"].afterHide();

    _bodyScrollDisable["default"].enable();
  }

  panel.afterHide(); // Panel hide event

  panel.getProp('onHide', function () {})();
}

function showPanel(panel, config) {
  panel.setOverrideProps(config); // Izpildām user uzstādīto before show eventu

  panel.getProp('onBeforeShow', function () {})();
  var animDurations = panel.getProp('animDurations');
  var showOverlay = panel.getProp('showOverlay', true); // Iepriekšējo paneli, ja tāds ir, disable

  if (openPanelsCount > 0) {
    openPanelsStack[openPanelsStack.length - 1].disable();
  }

  setZIndex(panel.getProp('zIndex'), panel);
  panelBeforeShow(panel);

  if (showOverlay && needToShowOverlay) {
    if (animDurations.overlay <= 0) {
      _overlay["default"].applyProgress(1);
    } else {
      OverlayStep.run({
        bezierCurve: panel.getProp('overlayAnimBezierCurve', fadingAnimBezierCurve).show,
        duration: animDurations.overlay,
        onStep: function onStep(p) {
          _overlay["default"].applyProgress(p);
        }
      });
    }
  }

  if (animDurations.panel <= 0) {
    panel.applyProgress(1);
    panelAfterShow(panel);
  } else {
    var applyProgressCb = createPanelApplyProgressCallback(panel);
    Step.run({
      bezierCurve: getPanelRevealAnimationBezierCurve(panel).show,
      duration: animDurations.panel,
      onStep: function onStep(p) {
        applyProgressCb(panel, p, function (p) {
          return panel.applyProgress(p);
        }, _bodyScrollDisable["default"].getEl());
      },
      onDone: function onDone() {
        panelAfterShow(panel);
      }
    });
  }
}

function hidePanel(panel, config) {
  panel.setOverrideProps(config); // Panel before hide event

  panel.getProp('onBeforeHide', function () {})();
  var animDurations = panel.getProp('animDurations');

  var onDone = function onDone() {
    if (OverlayStep.isRunning() || Step.isRunning()) {
      return;
    }

    panelAfterHide(panel); // Notīrām override props

    panel.setOverrideProps(null);
  };

  panelBeforeHide(panel);

  if (needToHideOverlay) {
    if (animDurations.overlay <= 0) {
      _overlay["default"].applyProgress(0);
    } else {
      OverlayStep.run({
        bezierCurve: panel.getProp('overlayAnimBezierCurve', fadingAnimBezierCurve).hide,
        duration: animDurations.overlay,
        onStep: function onStep(p) {
          if (_overlay["default"].getProgress() >= 1 - p) {
            _overlay["default"].applyProgress(1 - p);
          }
        },
        onDone: onDone
      });
    }
  }

  if (animDurations.panel <= 0) {
    panel.applyProgress(0);
    onDone();
  } else {
    var applyProgressCb = createPanelApplyProgressCallback(panel);
    Step.run({
      bezierCurve: getPanelRevealAnimationBezierCurve(panel).hide,
      duration: animDurations.panel,
      onStep: function onStep(p) {
        // Padodam panel, progress, default applyProgress metodi, kura ir obligāti
        // jāizsauc no custom applyProgress funkcijas
        applyProgressCb(panel, 1 - p, function (p) {
          return panel.applyProgress(p);
        }, _bodyScrollDisable["default"].getEl());
      },
      onDone: onDone
    });
  }
}

function hidePanelImediately(panel) {
  hidePanel(panel, {
    overlay: 0,
    panel: 0
  });
}

function hideAll() {
  if (openPanelsCount > 0) {
    // All panels except last one hideImmediatelu without animations etc
    openPanelsStack.slice(0, openPanelsCount - 1).forEach(function (panel) {
      return hidePanelImediately(panel);
    }); // Last one close normaly with animations etc

    hidePanel(openPanelsStack[openPanelsCount - 1]);
  }
}
/**
 * Šī ir funkcija, kura vienkārši izpildīs padoto defaultApplyProgress
 * un nekādas papildus darbības neveiks
 * Šī ir kā signature funkciju, kura ir jāizmanto, ja vēlas overraidot apply progress
 * šeit ir redzami visi parametri, kuri tiks padoti funkcijai
 */


function defaultPanelApplyProgressCallback(panel, p, defaultApplyProgress, bodyFrame) {
  defaultApplyProgress(p);
}
/**
 * Meklējam custom applyProgress paneļa props iestatījumos
 * Ja nav, tad izmantosim defaultApplyProgress funkciju
 */


function createPanelApplyProgressCallback(panel) {
  return panel.getProp('applyProgress', defaultPanelApplyProgressCallback);
}

function getPanelRevealAnimationBezierCurve(panel) {
  switch (panel.getProp('revealType')) {
    case 'fade':
      return panel.getProp('panelAnimBezierCurve', fadingAnimBezierCurve);

    default:
      return panel.getProp('panelAnimBezierCurve', slidingAnimBezierCurve);
  }
}

var _default = {
  init: init,
  registerPanel: registerPanel,
  getPanel: getPanel,
  hideAll: hideAll,
  showPanel: function showPanel(panelName, config) {
    handlePanelShow(getPanel(panelName), config);
  },
  hidePanel: function hidePanel(panelName, props) {
    handlePanelHide(getPanel(panelName), props);
  },
  togglePanel: function togglePanel(panelName, props) {
    var panel = getPanel(panelName);
    panel.isOpen ? handlePanelHide(panel) : handlePanelShow(panel);
  },
  resizePanel: function resizePanel(panelName) {
    if (panelName) {
      handlePanelResize(getPanel(panelName));
    } else {
      handleResizeAll();
    }
  },
  isOpen: function isOpen(panelName) {
    return getPanel(panelName).isOpen;
  },

  /**
   * @todo Šis ir jāpārsauc par onCloseClick
   * tas ir events, kad lietotājs ir izvēlējies aizvērt paneli
   * Šeit var pirms tam kaut ko izdarīt un tad izpildīts reālo
   * onCloseClick funkcionalitāti
   *
   * Bet varbūt vispār šitādu lietu nevajag, lai liek event uz paneli pa tiešo
   */
  onHide: function onHide(panelName, cb) {
    callbacks.hide = (0, _propPushToArray["default"])(callbacks.hide, panelName, cb);
  }
};
exports["default"] = _default;

},{"./bodyScrollDisable":50,"./fireCallbacks":53,"./overlay":57,"./panel":58,"./propPushToArray":60,"dom-helpers/src/addStyle":22,"dom-helpers/src/append":23,"dom-helpers/src/event/on":26,"dom-helpers/src/getWindowDimensions":32,"dom-helpers/src/re":42,"stepper":48}],57:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _addStyle = _interopRequireDefault(require("dom-helpers/src/addStyle"));

var _addClass = _interopRequireDefault(require("dom-helpers/src/addClass"));

var _append = _interopRequireDefault(require("dom-helpers/src/append"));

var _removeClass = _interopRequireDefault(require("dom-helpers/src/removeClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var el,
    visible = false,
    currentProgress;

function init() {
  createEl();
}
/**
 * Izveidojam overlay elementu un ieliekam body tagā
 */


function createEl() {
  el = document.createElement('div');
  el.className = 'overlay';
  (0, _append["default"])('body', el);
}

function beforeShow() {
  visible = true;
  applyProgress(0);
  (0, _addClass["default"])(el, 'overlay--visible-step1');
}

function beforeHide() {
  visible = false;
}

function afterHide() {
  (0, _removeClass["default"])(el, 'overlay--visible-step1');
}

function applyProgress(p) {
  currentProgress = p;
  el.style.opacity = p;
}

function isVisible() {
  return visible;
}

function onClick(cb) {
  onClickCallbacks.push(cb);
}

var _default = {
  init: init,
  beforeShow: beforeShow,
  beforeHide: beforeHide,
  afterHide: afterHide,
  applyProgress: applyProgress,
  isVisible: isVisible,
  getProgress: function getProgress() {
    return currentProgress;
  },
  setZIndex: function setZIndex(i) {
    (0, _addStyle["default"])(el, {
      zIndex: i
    });
  }
};
exports["default"] = _default;

},{"dom-helpers/src/addClass":21,"dom-helpers/src/addStyle":22,"dom-helpers/src/append":23,"dom-helpers/src/removeClass":44}],58:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _q = _interopRequireDefault(require("dom-helpers/src/q"));

var _addClass = _interopRequireDefault(require("dom-helpers/src/addClass"));

var _hasClass = _interopRequireDefault(require("dom-helpers/src/hasClass"));

var _removeClass = _interopRequireDefault(require("dom-helpers/src/removeClass"));

var _toggleClass = _interopRequireDefault(require("dom-helpers/src/toggleClass"));

var _addStyle = _interopRequireDefault(require("dom-helpers/src/addStyle"));

var _getWindowScrollTop = _interopRequireDefault(require("dom-helpers/src/getWindowScrollTop"));

var _setWindowScrollTop = _interopRequireDefault(require("dom-helpers/src/setWindowScrollTop"));

var _calcPanelXYOffsetByProgress = _interopRequireDefault(require("./calcPanelXYOffsetByProgress"));

var _calcAlignXY = _interopRequireDefault(require("./calcAlignXY"));

var _panelGetProp = _interopRequireDefault(require("./panelGetProp"));

var _click = _interopRequireDefault(require("dom-helpers/src/event/click"));

var _target = _interopRequireDefault(require("dom-helpers/src/event/target"));

var _parent = _interopRequireDefault(require("dom-helpers/src/parent"));

var _getOuterDimensions = _interopRequireDefault(require("dom-helpers/src/getOuterDimensions"));

var _isIos = _interopRequireDefault(require("./isIos"));

var _isAndroid = _interopRequireDefault(require("./isAndroid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

//import Swipe from 'swipe';
var defaultAlign = 'center center';
var defaultWidth = 320;
var defaultHideOnOutsideClick = true;

function panel(name, el, props) {
  this.isOpen = false;
  this.closeCb = undefined;
  this.beforeShowCb = undefined;
  this.hideInProgress = false;
  this.name = name;
  this.props = props;
  /**
   * Override props.
   * Šos var uzstādīt veicot show vai hide, tad var padots
   * savādākus props.
   * Kad nolasīs props, tad kā prioritāte būs props2
   */

  this.props2 = undefined; // Šie tiek definēti beforeShow

  this.align;
  this.revealFrom;
  this.revealType;
  /**
   * Pēdējais scrllTop kāds bija aizverot paneli
   * Scroll top ir tas, kur radīja pats panel content
   */

  this.lastScrollTop = 0;
  this.el = el;
  /**
   * Animējamie elementi
   */

  this.elements = {
    'bg': (0, _q["default"])(this.el, '.modal-panel__bg'),
    'header': (0, _q["default"])(this.el, '.modal-panel__header'),
    'footer': (0, _q["default"])(this.el, '.modal-panel__footer'),
    'content': (0, _q["default"])(this.el, '.modal-panel__content'),
    // Šis tiek izmantots, lai noturētu content scrollTop, kad panelis tiek slēpts
    contentInner: (0, _q["default"])(this.el, '.modal-panel__content-inner')
  }; // Ja nav bg, tad obligāti jāuztaisa

  if (!this.elements.bg) {
    this.elements.bg = this.createBg(this.el);
  } // Ja ir footer, tad pieliekam klasi


  (0, _toggleClass["default"])(this.el, 'modal-panel--footer', this.elements.footer); //this.swipe = new Swipe(this.el, {'direction': 'horizontal vertical'});

  this.setEvents();
}

panel.prototype = {
  setEvents: function setEvents() {
    var _this = this;

    (0, _click["default"])(this.el, function (ev) {
      var el = (0, _target["default"])(ev);
      var closePanel = false; // Pats panelis, reaģējam uz ārpus paneļa body click

      if (el === _this.el) {
        if (_this.getProp('hideOnOutsideClick', defaultHideOnOutsideClick)) {
          closePanel = true;
        }
      } // Is close button element
      else if ((0, _parent["default"])(el, '.modal-panel__close', '.modal-panel')) {
          /**
           * Reaģējam uz panelī definēto close pogu
           * closeCb nāk no panelsManager, kura šādā
           * veidā pateiksim, ka ir jāaizveras
           */
          closePanel = true;
        }

      if (closePanel) {
        ev.preventDefault();

        if (_this.closeCb) {
          _this.closeCb();
        }
      }
    });
  },
  createBg: function createBg(parent) {
    var r = document.createElement('div');
    r.className = 'modal-panel__bg';
    parent.appendChild(r);
    return r;
  },

  /**
   * @todo Jāpārdomā vai šo tiešām vajag, jo šis pārtrauc onClick eventu
   */
  // handleTouchStart: function(ev) {
  //     /**
  //      * Mobile safari:
  //      * Ja panel ir mazāks par windowHeight, tad jānovērš overscroll
  //      * Reaģējam tikai uz this.el
  //      */
  //     if (this.panelDimensions.height < this.windowDimensions.height) {
  //         if (target(ev) == this.el) {
  //             ev.preventDefault();
  //         }
  //     }
  // },
  setOverrideProps: function setOverrideProps(props) {
    this.props2 = props;
  },
  getProp: function getProp(name, defaultValue, args) {
    return (0, _panelGetProp["default"])(this.props, this.props2, name, defaultValue, args);
  },

  /**
   * Pirmie argumenti ir elements names
   * Pēdējais arguments ir style properties
   * ja ir tikai viens arguments, tad tie ir style properties
   */
  setElementsStyle: function setElementsStyle() {
    var _this2 = this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var props = args[args.length - 1];
    (args.length > 1 ? args.slice(0, args.length - 1) : ['bg', 'header', 'footer', 'content']).forEach(function (el) {
      if (_this2.elements[el]) {
        (0, _addStyle["default"])(_this2.elements[el], props);
      }
    });
  },

  /**
   * Helper metode ar kuru notur content scrollTop
   * Tā kā panelim tiek uzlikts overflow hidden, tāpēc
   * scrolLTop pazūd un to vajag simulēt ar transform
   */
  preserveContentScrollTop: function preserveContentScrollTop(scrollTop) {
    this.setElementsStyle('contentInner', {
      transform: scrollTop == 0 ? '' : 'translate(0, -' + scrollTop + 'px)'
    });
  },
  applyProgress: function applyProgress(progress) {
    if (this.revealType == 'slide') {
      this.setXYOffset((0, _calcPanelXYOffsetByProgress["default"])(this.align, this.revealFrom, this.d.panel, this.d.window, progress));
    } else if (this.revealType == 'fade') {
      this.setOpacity(1 * progress);
    }
  },
  contentInsideScrollable: function contentInsideScrollable() {
    return {
      position: 'fixed',
      top: this.align.y.value + this.d.header.height + 'px',
      height: this.d.panel.height - this.d.header.height - this.d.footer.height + 'px',
      overflow: 'auto',
      '-webkit-overflow-scrolling': 'touch'
    };
  },
  contentInsideNotScrollable: function contentInsideNotScrollable() {
    return {
      position: 'fixed',
      top: this.align.y.value + this.d.header.height + 'px',
      height: this.d.panel.height - this.d.header.height - this.d.footer.height + 'px',
      overflow: 'hidden'
    };
  },
  contentIsScrollable: function contentIsScrollable() {
    return {
      position: 'absolute',
      top: this.align.y.value + this.d.header.height + 'px',
      minHeight: this.d.panel.height - this.d.header.height + 'px',
      paddingBottom: this.d.footer.height + 'px',
      overflow: ''
    };
  },
  contentIsNotScrollable: function contentIsNotScrollable() {
    return {
      position: 'fixed',
      top: this.align.y.value + 'px',
      paddingTop: this.d.header.height + 'px',
      paddingBottom: this.d.footer.height + 'px',
      height: '100%',
      overflow: 'hidden'
    };
  },
  getHeaderDimensions: function getHeaderDimensions() {
    if (this.elements.header) {
      return (0, _getOuterDimensions["default"])(this.elements.header);
    }

    return {
      width: 0,
      height: 0
    };
  },
  getFooterDimensions: function getFooterDimensions() {
    if (this.elements.footer) {
      return (0, _getOuterDimensions["default"])(this.elements.footer);
    }

    return {
      width: 0,
      height: 0
    };
  },
  readDimensions: function readDimensions() {
    this.d = {
      window: this.getWindowDimensions(),
      // šo uzstāda manager.js veidojot paneli
      header: this.getHeaderDimensions(),
      footer: this.getFooterDimensions()
    }; // Landscape or portrait

    this.d.orientation = this.d.window.width > this.d.window.height ? 'landscape' : 'portrait';
    this.d.panel = {
      width: this.getProp('width', defaultWidth, [this.d.window]),

      /**
       * @todo this.d.window.height - jāpārtaisa par defaultheight=100%
       */
      height: this.getProp('height', this.d.window.height, [this.d.window])
    };
    this.d.isFullHeight = this.d.panel.height >= this.d.window.height, this.d.isFullWidth = this.d.panel.width >= this.d.window.width, this.d.isCover = this.d.isFullHeight && this.d.isFullWidth;
    this.align = (0, _calcAlignXY["default"])(this.getProp('align', defaultAlign, [this.d.window]), this.d.panel, this.d.window);
    this.revealFrom = this.getProp('revealFrom', 'left', [this.d.window]);
    this.revealType = this.getProp('revealType', 'none', [this.d.window]);
  },
  setPositionAndSize: function setPositionAndSize(isResize) {
    /**
     * Mobile safari: kad ir ieskrolēts uz adrese joslas ir samazinājusies un
     * bottom navigācijas pogas ir pazudušas:
     * Šajā mirklī jāuzliek windowHeight, lai neparādītos bottom pogas
     * Visi elementi ir fixed, šis būs tas, kas saglabās windowHeight
     * !! Šo ir jādara tikai uz Paneļa atvēršanu.
     * Pēc tam, kad notiek window resize dēļ skrollēšanas un adreses joslas atkal parādās
     * tad ir jāliek 100%
     */
    if (isResize) {
      (0, _addStyle["default"])(this.el, {
        height: '100%'
      });
    } else {
      (0, _addStyle["default"])(this.el, {
        height: this.d.window.height + 'px'
      });
    }
    /**
     * Ja platums ir tāds pats kā viewport platums, tad ir
     * jāliek 100% lai gadījumā, kad parādās vertical scroll bar,
     * tad neparādītos vertical sctrollbar un nevajadzētu rēķināt
     * scrollbar platumu un atņemt to no platuma
     */


    this.setElementsStyle('bg', 'header', 'content', 'footer', {
      left: this.align.x.value + 'px',
      width: this.d.isFullWidth ? '100%' : this.d.panel.width + 'px'
    });
    this.setElementsStyle('bg', 'header', {
      top: this.align.y.value + 'px'
    });

    if (this.d.isFullHeight) {
      this.setElementsStyle('footer', {
        bottom: 0
      });
    } else {
      this.setElementsStyle('footer', {
        top: this.align.y.value + this.d.panel.height - this.d.footer.height + 'px'
      });
    }
    /**
     * Special case, kad height ir tāds pats kā viewportHeight
     * šajā gadījumā vajag lai background ir lielāks par viewport,
     * lai scrollējot uz mobile safari/chrome nebūtu raustišanās,
     * kad parādās un pazūd bottom menu (kas izraisa ekrāna paaugstināšanos)
     */


    this.setElementsStyle('bg', {
      height: this.d.isFullHeight ? '120%' : this.d.panel.height + 'px'
    });
    /**
     * Content elementa scroll stratēģija
     *     contentInsideScrollable
     *     contentInsideNotScrollable
     *     contentIsScrollable
     *     contentIsNotScrollable
     */

    var isContentScrollable = this.getProp('contentScrollable', false, [this.d.window]);

    if (this.d.isCover) {
      if (isContentScrollable) {
        this.setElementsStyle('content', this.contentIsScrollable());
      } else {
        this.setElementsStyle('content', this.contentIsNotScrollable());
      }
    } else {
      if (this.d.isFullHeight) {
        if (isContentScrollable) {
          this.setElementsStyle('content', this.contentIsScrollable());
        } else {
          this.setElementsStyle('content', this.contentIsNotScrollable());
        }
      } else {
        if (isContentScrollable) {
          this.setElementsStyle('content', this.contentInsideScrollable());
        } else {
          this.setElementsStyle('content', this.contentInsideNotScrollable());
        }
      }
    }
  },

  /**
   * Priekš slide animācijas
   */
  setXYOffset: function setXYOffset(offset) {
    this.setElementsStyle({
      transform: 'translate3d(' + offset.x + 'px,' + offset.y + 'px,0)'
    });
  },
  setOpacity: function setOpacity(opacity) {
    this.setElementsStyle({
      opacity: opacity
    });
  },
  setZIndex: function setZIndex(i) {
    (0, _addStyle["default"])(this.el, {
      zIndex: i
    });
  },
  beforeShow: function beforeShow() {
    this.isOpen = true;
    this.readDimensions();
    this.isScrollHelper = this.getProp('addScrollHelper', false, [this.d.window]);
    this.setPositionAndSize(); // Atjaunojam scrollTop. Uzliekam content elementa Y offset

    if (this.getProp('restoreScrollTop', false)) {
      this.preserveContentScrollTop(this.lastScrollTop);
    }

    this.applyProgress(0);
    (0, _addClass["default"])(this.el, 'modal-panel--visible');
    /**
     * iOS fix, ja neuzliek transform, tad skrollējot raustīsies fixed header
     */

    (0, _addStyle["default"])(this.el, {
      transform: 'translate3d(0,0,0)'
    });

    if (this.beforeShowCb) {
      this.beforeShowCb();
    }
  },
  afterShow: function afterShow() {
    (0, _addClass["default"])(this.el, 'modal-panel--ready');
    /**
     * Jānovāc transform, lai uz iOS 12
     * scrollējot neraustītos fixed header
     */

    this.setElementsStyle({
      transform: ''
    }); // Atjaunojam scroll top

    if (this.getProp('restoreScrollTop', false)) {
      (0, _setWindowScrollTop["default"])(this.lastScrollTop);
      this.preserveContentScrollTop(0);
    }
    /**
     * iOS fix, ja neuzliek transform, tad skrollējot raustīsies fixed header
     * Kad animācija beigusies, tad ņemam nost, lai nebojā fixed header palikšanu
     * uz vietas, kad notiek scrollēšana
     * Ja parent elementam ir uzlikts transform, tad child position:fixed elementi
     * ir relatīvi pret parent nevis document
     */


    (0, _addStyle["default"])(this.el, {
      transform: ''
    });
    /**
     * ši palīdz uz ios un android ieskrolēt adreses joslu, ja panelis ir bez skrolēšanas
     * Jāuzliek lielāks augstums, kā ekrāna augstums.
     * elements ir absolute pozicionēts tāpēc neko neietekmē, kā tikai ļauj skrollēt
     * kas savukārt dod iespēju pārlūkprogrammai parādīt/noslēpt adreses joslu
     */

    if (this.isScrollHelper) {
      if (_isIos["default"] || _isAndroid["default"]) {
        this.setScrollHelperHeight(this.d.window.height * 1.4);
      }
    }
  },
  beforeHide: function beforeHide() {
    this.hideInProgress = true;
    /**
     * kad tiek noņemta klase modal-panel--ready
     * tad panelis kļūst overflow hidden
     * Šajā mirklī pazūt iepriekšējais scrollTop
     * jo tas ir uz visu dokumentu. Kad ir overflow hidden
     * tad skrolla vairs nav, jo nav overflowa
     *
     * Tāpēc šeit vajag nosimulēt scrollTop uzliekot uz
     * modal-panel__content transform: translate(0,-currentScrollTop)
     */
    // Sitas ir jāpieglabā kā offset vērtība, jo applyProgress pārraksta transform
    // Pāpārsauc par lastScrollTop, tad šito varētu atjaunot atkārtoti atverto paneli
    // jātaisa, kā konfigurējams, ka tiešām grib lai atcerās lastScrollTop

    this.lastScrollTop = (0, _getWindowScrollTop["default"])();
    this.preserveContentScrollTop(this.lastScrollTop);
    (0, _removeClass["default"])(this.el, 'modal-panel--ready');
  },
  afterHide: function afterHide() {
    (0, _removeClass["default"])(this.el, 'modal-panel--visible');
    this.preserveContentScrollTop(0); // Jānovāc visi inline style deklarācijas no elements

    this.setElementsStyle({
      width: '',
      height: '',
      left: '',
      top: '',
      opacity: '',
      transform: '',
      // content elementam tiek likts overflow atkarībā no panel height
      overflow: '',
      paddingTop: '',
      paddingBottom: '' // tikai iOS gadījumā
      ,
      '-webkit-overflow-scrolling': ''
    });
    this.hideInProgress = false;
    this.isOpen = false; // Vienmēr uzliekam 0, ja arī tas nemaz nebija ieslēgts

    this.setScrollHelperHeight(0);
  },
  resize: function resize() {
    this.readDimensions();
    this.setPositionAndSize(true);
    /**
     * šis vajadzīgs priekš scroll helper, lai vienmēr ir augšā
     * ja būs lejā, tad nevarēs normāli dabūt atpkaļ address bar
     */
    // if (isIos) {
    //     setWindowScrollTop(0);
    // }
  },
  disable: function disable() {
    (0, _addClass["default"])(this.el, 'modal-panel--disabled');
  },
  enable: function enable() {
    (0, _removeClass["default"])(this.el, 'modal-panel--disabled');
  },
  onClose: function onClose(cb) {
    this.closeCb = cb;
  },
  onBeforeShow: function onBeforeShow(cb) {
    this.beforeShowCb = cb;
  }
};
var _default = panel;
exports["default"] = _default;

},{"./calcAlignXY":51,"./calcPanelXYOffsetByProgress":52,"./isAndroid":54,"./isIos":55,"./panelGetProp":59,"dom-helpers/src/addClass":21,"dom-helpers/src/addStyle":22,"dom-helpers/src/event/click":25,"dom-helpers/src/event/target":28,"dom-helpers/src/getOuterDimensions":29,"dom-helpers/src/getWindowScrollTop":33,"dom-helpers/src/hasClass":34,"dom-helpers/src/parent":39,"dom-helpers/src/q":40,"dom-helpers/src/removeClass":44,"dom-helpers/src/setWindowScrollTop":45,"dom-helpers/src/toggleClass":46}],59:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = panelGetProp;

var _solveValue = _interopRequireDefault(require("./solveValue"));

var _validateAnimDurations = _interopRequireDefault(require("./validateAnimDurations"));

var _validateZIndex = _interopRequireDefault(require("./validateZIndex"));

var _validateAlign = _interopRequireDefault(require("./validateAlign"));

var _validateAnimBezierCurve = _interopRequireDefault(require("./validateAnimBezierCurve"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Atgriežam property pēc tā name
 * Katrs property var būt statiska vērtība vai ir funkcija, kuru izsaucot tiks atriezta vērtība
 * @param object Set of default props
 * @param object Set of override props
 * @param string Property name
 * @param string Default value ir property does not exists
 * @param array Array of arguments to pass to propertu value if it is function
 */
function panelGetProp(props1, props2, name, defaultValue, args) {
  if (typeof args == 'undefined') {
    args = [];
  }

  var r = defaultValue; // Override props. Šos skatamies pirmos

  if (props2 && typeof props2[name] != 'undefined') {
    r = props2[name];
  } // Default props, kuri uzlikti konstruktora laikā
  else if (props1 && typeof props1[name] != 'undefined') {
      r = props1[name];
    } // Solve property value
  // If r is function it is executed to get value


  switch (name) {
    // these are always callback functions, do not solveValue
    case 'applyProgress':
    case 'onBeforeShow':
    case 'onShow':
    case 'onBeforeHide':
    case 'onHide':
      break;

    default:
      r = (0, _solveValue["default"])(r, args);
      break;
  } // Papildus apstrādes noteiktām props


  switch (name) {
    case 'animDurations':
      r = (0, _validateAnimDurations["default"])(r);
      break;

    case 'zIndex':
      r = (0, _validateZIndex["default"])(r);
      break;

    case 'align':
      r = (0, _validateAlign["default"])(r);
      break;

    case 'overlayAnimBezierCurve':
    case 'panelAnimBezierCurve':
      r = (0, _validateAnimBezierCurve["default"])(r);
  }

  return r;
}

},{"./solveValue":61,"./validateAlign":62,"./validateAnimBezierCurve":63,"./validateAnimDurations":64,"./validateZIndex":65}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(target, propName, value) {
  if (typeof target[propName] == 'undefined') {
    target[propName] = [];
  }

  target[propName].push(value);
  return target;
}

},{}],61:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _default(value, customArguments) {
  switch (_typeof(value)) {
    // Value var nodefinēt kā funkciju
    case 'function':
      // Izsaucam ar customArguments
      return value.apply(this, customArguments);

    default:
      return value;
  }
}

},{}],62:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

/**
 * Align tiek definēts līdzīgi kā backgroundPosition: pa x asi, pa y asi
 */
function _default(align) {
  var r = align.split(' ').filter(function (a) {
    return a != '';
  });
  return {
    x: r.length > 0 ? r[0] : 'left',
    y: r.length > 1 ? r[1] : 'top'
  };
}

},{}],63:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function isValidAnimBezierCurve(curve) {
  if (typeof curve.show == 'undefined' && typeof curve.hide == 'undefined') {
    return false;
  }

  return true;
}

function _default(d) {
  /**
   * AnimCurve ir definēta ar curve priekš show animācijas
   * un hide, priekš hide animācijas
   */
  // Ja d ir tikai bezier curve
  if (!isValidAnimBezierCurve(d)) {
    // Taisam lai būtu gan show, gan hide un vērtības vienādas
    return {
      show: d,
      hide: d
    };
  } // Gadījumā, ja ir tikai vai nu show vai hide
  // tad trūkstošo uztaisām tādu pašu kā esošais


  if (typeof d.show == 'undefined') {
    d.show = d.hide;
  }

  if (typeof d.hide == 'undefined') {
    d.hide = d.show;
  }

  return d;
}

},{}],64:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(d) {
  if (typeof d == 'undefined') {
    d = {};
  }

  if (typeof d.overlay == 'undefined') {
    d.overlay = 0;
  }

  if (typeof d.panel == 'undefined') {
    d.panel = 0;
  }

  return d;
}

},{}],65:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function _default(d) {
  if (typeof d == 'undefined') {
    d = {};
  }

  if (typeof d.bodyFrame == 'undefined') {
    d.bodyFrame = 1;
  }

  if (typeof d.overlay == 'undefined') {
    d.overlay = 2;
  }

  if (typeof d.panel == 'undefined') {
    d.panel = 3;
  }

  return d;
}

},{}]},{},[1]);
